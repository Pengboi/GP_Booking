Project Notes

Account types:
	1:	Receiptionist
	2:	Doctor
	3:	HR/IT (Management accounts for scheduling access)


AMD Notes:

When naming files within Models, Views, ViewModels Folders,
Caliburn.Micro Library seeks files within these folders and depending on naming
conventions, the complier is able to understand the functions of each file.

Views =	666 OVO XO UI/UX Xperia Xperience XP
ViewModels = UI LOGIC
Models = Backend / Business Logic

==================================================================================
AlertBox VM

using GalaSoft.MvvmLight.Command;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Input;

namespace Appointment_Mgr.Dialog
{
    public class AlertBoxViewModel : DialogBoxViewModelBase<DialogResults>
    {
        public ICommand OKCommand { get; private set; }

        public AlertBoxViewModel() 
        {
            OKCommand = new RelayCommand<IDialogWindow>(OK);

        }

        private void OK(IDialogWindow window) 
        {
            CloseDialogWithResult(window, DialogResults.Undefined);
        }
    }
}


=====================================================================================
AlertBox XAML

<UserControl x:Class="Appointment_Mgr.Dialog.AlertBoxView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:Appointment_Mgr.View"
        mc:Ignorable="d"
        Height="250" Width="550"
        DataContext="{Binding AlertBox, Source={StaticResource Locator}}" >
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="120" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="30" />

            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="150"/>
                <RowDefinition Height="*"  />
            </Grid.RowDefinitions>
            <Image Grid.Column="1" Width="90" Height="90" Margin="0,0,0,15" 
                   Source="{Binding MessageImage}"/>
            <TextBlock Grid.Column="2" Margin="10,25,10,10"
                   Text="{Binding Message}"/>
            <Button Grid.Row="1" Grid.Column="2" Height="40" Width="100" HorizontalAlignment="Right"
                    Margin="0,0,5,10" Content="OK" FontSize="18" FontWeight="DemiBold"
                    Command="{Binding ButtonClick}"/>
        </Grid>
    </Grid>
</UserControl>











